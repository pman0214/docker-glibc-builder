name: Build for x86_64

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      target_tag:
        description: Release target tag
        type: string
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get Architecture
        id: get_arch
        run: |
          echo "Architecture: $(arch)"
          echo "arch=$(arch)" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get Latest Tag
        id: get_latest_tag
        run: |
          echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
      - name: Set Target Tag
        id: set_target_tag
        run: |
          if [[ "${{ github.event.inputs.target_tag }}" != '' ]]; then
            echo "${{ github.event.inputs.target_tag }}" > TAG_NAME
          else
            echo "${{ steps.get_latest_tag.outputs.tag }}" > TAG_NAME
          fi
          echo "Target tag: $(cat TAG_NAME)"
          echo "tag=$(cat TAG_NAME)" >> $GITHUB_OUTPUT
      - name: Switch to Target Tag
        run: |
          git checkout ${{ steps.set_target_tag.outputs.tag }}
      - name: Build
        run: |
          docker run --rm --env STDOUT=1 pman0214/glibc-builder 2.37 /usr/glibc-compat > glibc-bin-${{ steps.set_target_tag.outputs.tag }}-${{ steps.get_arch.outputs.arch }}.tar.gz
      - name: Archive Build Output
        uses: actions/upload-artifact@v4
        with:
          name: built-glibc-bin
          path: glibc-bin-${{ steps.set_target_tag.outputs.tag }}-${{ steps.get_arch.outputs.arch }}.tar.gz
          retention-days: 3
